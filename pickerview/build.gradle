apply plugin: 'com.android.library'
apply plugin: 'maven-publish'


android {
    compileSdkVersion 26

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 34
        versionName "4.1.9"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

//allprojects {
//    tasks.withType(Javadoc) {//兼容中文字符
//        options{
//            encoding "UTF-8"
//            charSet 'UTF-8'
//            links "http://docs.oracle.com/javase/7/docs/api"
//        }
//    }
//}
//publish {
//    userOrg = 'contrarywind'//bintray.com 用户名/组织名 user/org name
//    groupId = 'com.contrarywind'//JCenter上显示的路径 path
//    artifactId = 'Android-PickerView'//项目名称 project name
//    publishVersion = '4.1.9'//版本号 version code
//    desc = 'this is a pickerview for android'//项目描述 description
//    website = 'https://github.com/Bigkoo/Android-PickerView' //项目网址链接 link
//}

dependencies {
//    compile fileTree(include: ['*.jar'], dir: 'libs')
//    api project(path: ':wheelview')
//    api 'com.contrarywind:wheelview:4.1.0'
    implementation 'com.android.support:support-annotations:28.0.0'
    implementation 'com.halobear:wheelview:4.9.0.2'

}


version = "4.9.0.3"

def group_id = "com.halobear"
def artifact_id = "Android-PickerView"

def is_public = true

publishing {
    publications {
        maven(MavenPublication) {
            groupId = group_id
            artifactId = artifact_id
            //最后必须是-SNAPSHOT
            version = is_public.toBoolean() ? version : '1.0.0-SNAPSHOT'

            afterEvaluate { artifact(tasks.getByName("bundleReleaseAar")) }
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.withType(ModuleDependency) { ModuleDependency dp ->
                    if (dp.version != "unspecified") { // 过滤项目内library引用
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', dp.group)
                        dependencyNode.appendNode('artifactId', dp.name)
                        dependencyNode.appendNode('version', dp.version)
                        // for exclusions
                        if (dp.excludeRules.size() > 0) {
                            def exclusions = dependencyNode.appendNode('exclusions')
                            dp.excludeRules.each { ExcludeRule ex ->
                                def exclusion = exclusions.appendNode('exclusion')
                                exclusion.appendNode('groupId', ex.group)
                                exclusion.appendNode('artifactId', ex.module)
                            }
                        }
                    }
                }
            }
        }
    }

    repositories {
        maven {
            credentials {
                username '62cbc480dbd131f866db3ee5'
                password 'Pf=Ngmz5]qO_'
            }
            url = is_public.toBoolean() ? 'https://packages.aliyun.com/maven/repository/2002699-release-wOeHZz/' : 'https://packages.aliyun.com/maven/repository/2002699-snapshot-McZYc3/'
        }
    }
}